{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","InputValue","setInputValue","onSubmit","e","preventDefault","length","c","type","value","onChange","target","getGifs","Categoria","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","alt","src","GifGrid","cat","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","setCategoria","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SAVK,SAACC,GACZA,EAAEC,iBACEJ,EAAWK,QAAU,IACrBP,EAAe,IACfA,GAAe,SAAAQ,GAAC,4BAAQA,GAAR,CAAWN,OAC3BC,EAAc,MAKlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAAa,SAAAN,GAAC,OAAIF,EAAcE,EAAEO,OAAOF,a,uBClB5CG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAUH,GADvF,sBAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAQ,CACJC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QATxB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IAEzB,OACI,qBAAKM,UAAU,yCAAf,SACI,qBAAKC,IAAKP,EAAIE,MAAOM,IAAKR,EAAIR,SCD7BiB,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,UAWtB,ECZwB,SAACoB,GAEzB,MAA0BjC,mBAAS,CAC/BoB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNzB,EAAQqB,GACHK,MAAK,SAAAC,GAAI,OACNH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGtB,CAACD,IAEGE,EDLwBK,CAAa3B,GAAhCa,EAAZ,EAAON,KAAac,EAApB,EAAoBA,QAGpB,OACI,qCAESA,GAAW,4CAGhB,oBAAIL,UAAU,mCAAd,SAAkDhB,IAClD,uBACA,qBAAKgB,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OAAI,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIC,aET9CiB,EAhBM,WACjB,MAAkCzC,mBAAS,IAA3C,mBAAOa,EAAP,KAAkB6B,EAAlB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAa3C,cAAe2C,IAC5B,6BAEQ7B,EAAUS,KAAI,SAAAW,GAAG,OAAI,cAAC,EAAD,CAAmBpB,UAAWoB,GAAhBA,YCPvDU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.135f922d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n    const [InputValue, setInputValue] = useState('')\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if (InputValue.length >= 2){\r\n            setCategorias( [] );\r\n            setCategorias( c => [...c, InputValue] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { submit }>\r\n            <input \r\n                type=\"text\"\r\n                value={InputValue}\r\n                onChange = { e => setInputValue(e.target.value) }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async(Categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=URXNcPBvdZE7BwBosLgXYhA0qjrp8JL5&q=${ encodeURI(Categoria) }&limit=10`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return ({\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url\r\n        })\r\n    });\r\n    \r\n    return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({img}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img alt={img.title} src={img.url} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGif';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ Categoria}) => {\r\n\r\n    // const [images, setimages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //    getGifs(Categoria)\r\n    //         .then(\r\n    //             setimages\r\n    //         )\r\n    // }, [Categoria]);\r\n\r\n    const {data:images, loading} = useFetchGifs(Categoria);\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (loading && <p>Cargando...</p>)\r\n            }\r\n        \r\n            <h2 className='animate__animated animate__flash'>{Categoria}</h2>\r\n            <hr />\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map( img => <GifGridItem key={img.id} img={img} /> )\r\n                }\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGif\";\r\n\r\n\r\nexport const useFetchGifs = (cat) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(cat)\r\n            .then(imgs => \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            )\r\n    }, [cat])\r\n    \r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [Categoria, setCategoria] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategoria} />\r\n            <ol>\r\n                {\r\n                    Categoria.map(cat => <GifGrid key={cat} Categoria={cat} />)\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}